/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  SourceMinter,
  SourceMinterInterface,
} from "../../contracts/SourceMinter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "address",
        name: "link",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "FailedToWithdrawEth",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "messageId",
        type: "bytes32",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferRequested",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "destinationChainSelector",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "enum SourceMinter.PayFeesIn",
        name: "payFeesIn",
        type: "uint8",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610d04380380610d0483398101604081905261002f91610207565b33806000816100855760405162461bcd60e51b815260206004820152601860248201527f43616e6e6f7420736574206f776e657220746f207a65726f000000000000000060448201526064015b60405180910390fd5b600080546001600160a01b0319166001600160a01b03848116919091179091558116156100b5576100b581610142565b5050506001600160a01b03828116608081905290821660a081905260405163095ea7b360e01b8152600481019290925260001960248301529063095ea7b3906044016020604051808303816000875af1158015610116573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013a919061023a565b505050610263565b336001600160a01b0382160361019a5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c66000000000000000000604482015260640161007c565b600180546001600160a01b0319166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b80516001600160a01b038116811461020257600080fd5b919050565b6000806040838503121561021a57600080fd5b610223836101eb565b9150610231602084016101eb565b90509250929050565b60006020828403121561024c57600080fd5b8151801515811461025c57600080fd5b9392505050565b60805160a051610a6e610296600039600061047c0152600081816104c301528181610584015261061c0152610a6e6000f3fe6080604052600436106100695760003560e01c80638da5cb5b116100435780638da5cb5b146100cc578063ec99afa2146100f8578063f2fde38b1461011857600080fd5b80633aeac4e11461007557806351cff8d91461009757806379ba5097146100b757600080fd5b3661007057005b600080fd5b34801561008157600080fd5b50610095610090366004610818565b610138565b005b3480156100a357600080fd5b506100956100b236600461084b565b610228565b3480156100c357600080fd5b506100956102c6565b3480156100d857600080fd5b50600054604080516001600160a01b039092168252519081900360200190f35b34801561010457600080fd5b5061009561011336600461086d565b610384565b34801561012457600080fd5b5061009561013336600461084b565b6106d6565b6101406106ea565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610187573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ab91906108c7565b60405163a9059cbb60e01b81526001600160a01b038581166004830152602482018390529192509083169063a9059cbb906044016020604051808303816000875af11580156101fe573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022291906108e0565b50505050565b6102306106ea565b60405147906000906001600160a01b0384169083908381818185875af1925050503d806000811461027d576040519150601f19603f3d011682016040523d82523d6000602084013e610282565b606091505b50509050806102c157604051639d11f56360e01b81523360048201526001600160a01b0384166024820152604481018390526064015b60405180910390fd5b505050565b6001546001600160a01b031633146103205760405162461bcd60e51b815260206004820152601660248201527f4d7573742062652070726f706f736564206f776e65720000000000000000000060448201526064016102b8565b600080543373ffffffffffffffffffffffffffffffffffffffff19808316821784556001805490911690556040516001600160a01b0390921692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a350565b6040805160a081019091526001600160a01b03831660c08201526000908060e0810160408051808303601f190181529181529082525133602482015260209091019060440160408051601f19818403018152919052602080820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166335313c2160e11b17905290825201600060405190808252806020026020018201604052801561045457816020015b604080518082019091526000808252602082015281526020019060019003908161042d5790505b508152602001600184600181111561046e5761046e610902565b1461047a57600061049c565b7f00000000000000000000000000000000000000000000000000000000000000005b6001600160a01b0316815260200160405180602001604052806000815250815250905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166320487ded86846040518363ffffffff1660e01b815260040161050f92919061095e565b602060405180830381865afa15801561052c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055091906108c7565b90506000600184600181111561056857610568610902565b03610605576040516396f4e9f960e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906396f4e9f9906105bb908990879060040161095e565b6020604051808303816000875af11580156105da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fe91906108c7565b905061069b565b6040516396f4e9f960e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906396f4e9f9908490610655908a90889060040161095e565b60206040518083038185885af1158015610673573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061069891906108c7565b90505b6040518181527f54791b38f3859327992a1ca0590ad3c0f08feba98d1a4f56ab0dca74d203392a9060200160405180910390a1505050505050565b6106de6106ea565b6106e781610746565b50565b6000546001600160a01b031633146107445760405162461bcd60e51b815260206004820152601660248201527f4f6e6c792063616c6c61626c65206279206f776e65720000000000000000000060448201526064016102b8565b565b336001600160a01b0382160361079e5760405162461bcd60e51b815260206004820152601760248201527f43616e6e6f74207472616e7366657220746f2073656c6600000000000000000060448201526064016102b8565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383811691821790925560008054604051929316917fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae12789190a350565b80356001600160a01b038116811461081357600080fd5b919050565b6000806040838503121561082b57600080fd5b610834836107fc565b9150610842602084016107fc565b90509250929050565b60006020828403121561085d57600080fd5b610866826107fc565b9392505050565b60008060006060848603121561088257600080fd5b833567ffffffffffffffff8116811461089a57600080fd5b92506108a8602085016107fc565b91506040840135600281106108bc57600080fd5b809150509250925092565b6000602082840312156108d957600080fd5b5051919050565b6000602082840312156108f257600080fd5b8151801515811461086657600080fd5b634e487b7160e01b600052602160045260246000fd5b6000815180845260005b8181101561093e57602081850181015186830182015201610922565b506000602082860101526020601f19601f83011685010191505092915050565b6000604067ffffffffffffffff8516835260208181850152845160a08386015261098b60e0860182610918565b905081860151603f19808784030160608801526109a88383610918565b88860151888203830160808a01528051808352908601945060009350908501905b808410156109fb57845180516001600160a01b03168352860151868301529385019360019390930192908601906109c9565b5060608901516001600160a01b031660a08901526080890151888203830160c08a01529550610a2a8187610918565b9a995050505050505050505056fea2646970667358221220ef7b5175f44c12c18b394119fb19219b30b903cbb2c5a97a2e449e8c3fe0edf964736f6c63430008130033";

type SourceMinterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SourceMinterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SourceMinter__factory extends ContractFactory {
  constructor(...args: SourceMinterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    router: PromiseOrValue<string>,
    link: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SourceMinter> {
    return super.deploy(router, link, overrides || {}) as Promise<SourceMinter>;
  }
  override getDeployTransaction(
    router: PromiseOrValue<string>,
    link: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(router, link, overrides || {});
  }
  override attach(address: string): SourceMinter {
    return super.attach(address) as SourceMinter;
  }
  override connect(signer: Signer): SourceMinter__factory {
    return super.connect(signer) as SourceMinter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SourceMinterInterface {
    return new utils.Interface(_abi) as SourceMinterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SourceMinter {
    return new Contract(address, _abi, signerOrProvider) as SourceMinter;
  }
}

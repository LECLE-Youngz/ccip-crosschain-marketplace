/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ExclusiveNFT,
  ExclusiveNFTInterface,
} from "../../contracts/ExclusiveNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_unrevealURI",
        type: "string",
      },
      {
        internalType: "address",
        name: "_premiumNFT",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_nextTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "checkUpkeep",
    outputs: [
      {
        internalType: "bool",
        name: "upkeepNeeded",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "keys",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "performUpkeep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "premiumNFT",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "s_forwarderAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "s_isSold",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "string",
        name: "_revealURI",
        type: "string",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarderAddress",
        type: "address",
      },
    ],
    name: "setForwarderAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unrevealURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002814380380620028148339810160408190526200003491620002a4565b83836000620000448382620003e6565b506001620000538282620003e6565b505050620000706200006a620000b460201b60201c565b620000b8565b6200007b326200010a565b600e620000898382620003e6565b50600a80546001600160a01b0319166001600160a01b039290921691909117905550620004b2915050565b3390565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6007546001600160a01b031633146200016a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b038116620001d15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840162000161565b620001dc81620000b8565b50565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200020757600080fd5b81516001600160401b0380821115620002245762000224620001df565b604051601f8301601f19908116603f011681019082821181831017156200024f576200024f620001df565b816040528381526020925086838588010111156200026c57600080fd5b600091505b8382101562000290578582018301518183018401529082019062000271565b600093810190920192909252949350505050565b60008060008060808587031215620002bb57600080fd5b84516001600160401b0380821115620002d357600080fd5b620002e188838901620001f5565b95506020870151915080821115620002f857600080fd5b6200030688838901620001f5565b945060408701519150808211156200031d57600080fd5b506200032c87828801620001f5565b606087015190935090506001600160a01b03811681146200034c57600080fd5b939692955090935050565b600181811c908216806200036c57607f821691505b6020821081036200038d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003e157600081815260208120601f850160051c81016020861015620003bc5750805b601f850160051c820191505b81811015620003dd57828155600101620003c8565b5050505b505050565b81516001600160401b03811115620004025762000402620001df565b6200041a8162000413845462000357565b8462000393565b602080601f831160018114620004525760008415620004395750858301515b600019600386901b1c1916600185901b178555620003dd565b600085815260208120601f198616915b82811015620004835788860151825594840194600190910190840162000462565b5085821015620004a25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61235280620004c26000396000f3fe608060405234801561001057600080fd5b50600436106101b95760003560e01c80635a601985116100f9578063a22cb46511610097578063d204c45e11610071578063d204c45e146103a3578063d777cc6d146103b6578063e985e9c5146103c9578063f2fde38b1461040557600080fd5b8063a22cb4651461036a578063b88d4fde1461037d578063c87b56dd1461039057600080fd5b806370a08231116100d357806370a0823114610336578063715018a6146103495780638da5cb5b1461035157806395d89b411461036257600080fd5b80635a601985146102ef5780636352211e146103025780636e04ff0d1461031557600080fd5b806323b872dd1161016657806342842e0e1161014057806342842e0e1461029d5780634585e33b146102b05780634a60f620146102c35780634e1bcdbd146102cc57600080fd5b806323b872dd146102645780633070fbf8146102775780633bb3a24d1461028a57600080fd5b8063095ea7b311610197578063095ea7b3146102265780630cb6aaf11461023b5780632126ea811461025c57600080fd5b806301ffc9a7146101be57806306fdde03146101e6578063081812fc146101fb575b600080fd5b6101d16101cc366004611cde565b610418565b60405190151581526020015b60405180910390f35b6101ee61046a565b6040516101dd9190611d4b565b61020e610209366004611d5e565b6104fc565b6040516001600160a01b0390911681526020016101dd565b610239610234366004611d93565b610596565b005b61024e610249366004611d5e565b6106c9565b6040519081526020016101dd565b6101ee6106ea565b610239610272366004611dbd565b610778565b60095461020e906001600160a01b031681565b6101ee610298366004611d5e565b6107f4565b6102396102ab366004611dbd565b610920565b6102396102be366004611df9565b6109b7565b61024e60085481565b6101d16102da366004611d5e565b600c6020526000908152604090205460ff1681565b600a5461020e906001600160a01b031681565b61020e610310366004611d5e565b610b7f565b610328610323366004611df9565b610bf6565b6040516101dd929190611e6b565b61024e610344366004611e86565b610c74565b610239610cfb565b6007546001600160a01b031661020e565b6101ee610d61565b610239610378366004611ea1565b610d70565b61023961038b366004611f69565b610e34565b6101ee61039e366004611d5e565b610eb6565b6102396103b1366004611fe5565b611048565b6102396103c4366004611e86565b611136565b6101d16103d7366004612047565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610239610413366004611e86565b6111b2565b60006001600160e01b031982166380ac58cd60e01b148061044957506001600160e01b03198216635b5e139f60e01b145b8061046457506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546104799061207a565b80601f01602080910402602001604051908101604052809291908181526020018280546104a59061207a565b80156104f25780601f106104c7576101008083540402835291602001916104f2565b820191906000526020600020905b8154815290600101906020018083116104d557829003601f168201915b5050505050905090565b6000818152600260205260408120546001600160a01b031661057a5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006105a182610b7f565b9050806001600160a01b0316836001600160a01b03160361060e5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610571565b336001600160a01b038216148061064857506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6106ba5760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610571565b6106c4838361127d565b505050565b600d81815481106106d957600080fd5b600091825260209091200154905081565b600e80546106f79061207a565b80601f01602080910402602001604051908101604052809291908181526020018280546107239061207a565b80156107705780601f1061074557610100808354040283529160200191610770565b820191906000526020600020905b81548152906001019060200180831161075357829003601f168201915b505050505081565b610783335b826112eb565b6107e95760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6044820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b6064820152608401610571565b6106c48383836113de565b600a546040516370a0823160e01b8152336004820181905260609290916000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610844573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086891906120ae565b111561090d576000838152600b6020526040902080546108879061207a565b80601f01602080910402602001604051908101604052809291908181526020018280546108b39061207a565b80156109005780601f106108d557610100808354040283529160200191610900565b820191906000526020600020905b8154815290600101906020018083116108e357829003601f168201915b5050505050915050919050565b600e80546108879061207a565b50919050565b6109293361077d565b61098f5760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6044820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b6064820152608401610571565b61099a8383836113de565b6000908152600c60205260409020805460ff191660011790555050565b6009546001600160a01b03163314610a375760405162461bcd60e51b815260206004820152603b60248201527f54686973206164647265737320646f6573206e6f742068617665207065726d6960448201527f7373696f6e20746f2063616c6c20706572666f726d55706b65657000000000006064820152608401610571565b60005b600d548110156106c457600c6000600d8381548110610a5b57610a5b6120c7565b6000918252602080832090910154835282019290925260400190205460ff161515600103610b6d57610b62600d8281548110610a9957610a996120c7565b9060005260206000200154600b6000600d8581548110610abb57610abb6120c7565b906000526020600020015481526020019081526020016000208054610adf9061207a565b80601f0160208091040260200160405190810160405280929190818152602001828054610b0b9061207a565b8015610b585780601f10610b2d57610100808354040283529160200191610b58565b820191906000526020600020905b815481529060010190602001808311610b3b57829003601f168201915b505050505061157e565b610b6d600d82611620565b80610b77816120f3565b915050610a3a565b6000818152600260205260408120546001600160a01b0316806104645760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610571565b60006060815b600d54811015610c5c57600c6000600d8381548110610c1d57610c1d6120c7565b6000918252602080832090910154835282019290925260400190205460ff161515600103610c4a57600192505b80610c54816120f3565b915050610bfc565b50506040805160208101909152600081529250929050565b60006001600160a01b038216610cdf5760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610571565b506001600160a01b031660009081526003602052604090205490565b6007546001600160a01b03163314610d555760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610571565b610d5f60006116c3565b565b6060600180546104799061207a565b336001600160a01b03831603610dc85760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610571565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610e3e33836112eb565b610ea45760405162461bcd60e51b815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6044820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b6064820152608401610571565b610eb084848484611715565b50505050565b6000818152600260205260409020546060906001600160a01b0316610f435760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f722060448201527f6e6f6e6578697374656e7420746f6b656e0000000000000000000000000000006064820152608401610571565b60008281526006602052604081208054610f5c9061207a565b80601f0160208091040260200160405190810160405280929190818152602001828054610f889061207a565b8015610fd55780601f10610faa57610100808354040283529160200191610fd5565b820191906000526020600020905b815481529060010190602001808311610fb857829003601f168201915b505050505090506000610ff360408051602081019091526000815290565b90508051600003611005575092915050565b81511561103757808260405160200161101f92919061210c565b60405160208183030381529060405292505050919050565b61104084611793565b949350505050565b6007546001600160a01b031633146110a25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610571565b60088054600091826110b3836120f3565b9190505590506110c38382611889565b6110d481600e8054610adf9061207a565b6000818152600b602052604090206110ec8382612189565b506000818152600c60205260408120805460ff19169055600d805460018101825591527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb501555050565b6007546001600160a01b031633146111905760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610571565b600980546001600160a01b0319166001600160a01b0392909216919091179055565b6007546001600160a01b0316331461120c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610571565b6001600160a01b0381166112715760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610571565b61127a816116c3565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906112b282610b7f565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600260205260408120546001600160a01b03166113645760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610571565b600061136f83610b7f565b9050806001600160a01b0316846001600160a01b031614806113aa5750836001600160a01b031661139f846104fc565b6001600160a01b0316145b8061104057506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff16611040565b826001600160a01b03166113f182610b7f565b6001600160a01b0316146114595760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610571565b6001600160a01b0382166114bb5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610571565b6114c660008261127d565b6001600160a01b03831660009081526003602052604081208054600192906114ef908490612249565b90915550506001600160a01b038216600090815260036020526040812080546001929061151d90849061225c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000828152600260205260409020546001600160a01b03166116085760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201527f6578697374656e7420746f6b656e0000000000000000000000000000000000006064820152608401610571565b60008281526006602052604090206106c48282612189565b81548110156116bf57805b825461163990600190612249565b811015611697578261164c82600161225c565b8154811061165c5761165c6120c7565b9060005260206000200154838281548110611679576116796120c7565b6000918252602090912001558061168f816120f3565b91505061162b565b50818054806116a8576116a861226f565b600190038181906000526020600020016000905590555b5050565b600780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6117208484846113de565b61172c848484846118a3565b610eb05760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610571565b6000818152600260205260409020546060906001600160a01b03166118205760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e00000000000000000000000000000000006064820152608401610571565b600061183760408051602081019091526000815290565b905060008151116118575760405180602001604052806000815250611882565b80611861846119ef565b60405160200161187292919061210c565b6040516020818303038152906040525b9392505050565b6116bf828260405180602001604052806000815250611b08565b60006001600160a01b0384163b156119e457604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906118e7903390899088908890600401612285565b6020604051808303816000875af1925050508015611922575060408051601f3d908101601f1916820190925261191f918101906122c1565b60015b6119ca573d808015611950576040519150601f19603f3d011682016040523d82523d6000602084013e611955565b606091505b5080516000036119c25760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610571565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611040565b506001949350505050565b606081600003611a165750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611a405780611a2a816120f3565b9150611a399050600a836122f4565b9150611a1a565b60008167ffffffffffffffff811115611a5b57611a5b611edd565b6040519080825280601f01601f191660200182016040528015611a85576020820181803683370190505b5090505b841561104057611a9a600183612249565b9150611aa7600a86612308565b611ab290603061225c565b60f81b818381518110611ac757611ac76120c7565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611b01600a866122f4565b9450611a89565b611b128383611b86565b611b1f60008484846118a3565b6106c45760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608401610571565b6001600160a01b038216611bdc5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610571565b6000818152600260205260409020546001600160a01b031615611c415760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610571565b6001600160a01b0382166000908152600360205260408120805460019290611c6a90849061225c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b03198116811461127a57600080fd5b600060208284031215611cf057600080fd5b813561188281611cc8565b60005b83811015611d16578181015183820152602001611cfe565b50506000910152565b60008151808452611d37816020860160208601611cfb565b601f01601f19169290920160200192915050565b6020815260006118826020830184611d1f565b600060208284031215611d7057600080fd5b5035919050565b80356001600160a01b0381168114611d8e57600080fd5b919050565b60008060408385031215611da657600080fd5b611daf83611d77565b946020939093013593505050565b600080600060608486031215611dd257600080fd5b611ddb84611d77565b9250611de960208501611d77565b9150604084013590509250925092565b60008060208385031215611e0c57600080fd5b823567ffffffffffffffff80821115611e2457600080fd5b818501915085601f830112611e3857600080fd5b813581811115611e4757600080fd5b866020828501011115611e5957600080fd5b60209290920196919550909350505050565b82151581526040602082015260006110406040830184611d1f565b600060208284031215611e9857600080fd5b61188282611d77565b60008060408385031215611eb457600080fd5b611ebd83611d77565b915060208301358015158114611ed257600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611f0e57611f0e611edd565b604051601f8501601f19908116603f01168101908282118183101715611f3657611f36611edd565b81604052809350858152868686011115611f4f57600080fd5b858560208301376000602087830101525050509392505050565b60008060008060808587031215611f7f57600080fd5b611f8885611d77565b9350611f9660208601611d77565b925060408501359150606085013567ffffffffffffffff811115611fb957600080fd5b8501601f81018713611fca57600080fd5b611fd987823560208401611ef3565b91505092959194509250565b60008060408385031215611ff857600080fd5b61200183611d77565b9150602083013567ffffffffffffffff81111561201d57600080fd5b8301601f8101851361202e57600080fd5b61203d85823560208401611ef3565b9150509250929050565b6000806040838503121561205a57600080fd5b61206383611d77565b915061207160208401611d77565b90509250929050565b600181811c9082168061208e57607f821691505b60208210810361091a57634e487b7160e01b600052602260045260246000fd5b6000602082840312156120c057600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201612105576121056120dd565b5060010190565b6000835161211e818460208801611cfb565b835190830190612132818360208801611cfb565b01949350505050565b601f8211156106c457600081815260208120601f850160051c810160208610156121625750805b601f850160051c820191505b818110156121815782815560010161216e565b505050505050565b815167ffffffffffffffff8111156121a3576121a3611edd565b6121b7816121b1845461207a565b8461213b565b602080601f8311600181146121ec57600084156121d45750858301515b600019600386901b1c1916600185901b178555612181565b600085815260208120601f198616915b8281101561221b578886015182559484019460019091019084016121fc565b50858210156122395787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b81810381811115610464576104646120dd565b80820180821115610464576104646120dd565b634e487b7160e01b600052603160045260246000fd5b60006001600160a01b038087168352808616602084015250836040830152608060608301526122b76080830184611d1f565b9695505050505050565b6000602082840312156122d357600080fd5b815161188281611cc8565b634e487b7160e01b600052601260045260246000fd5b600082612303576123036122de565b500490565b600082612317576123176122de565b50069056fea2646970667358221220fd6a821ee8b90041ea1f0f1a414b651dfd4670d724441409afbbe575598347e164736f6c63430008130033";

type ExclusiveNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExclusiveNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExclusiveNFT__factory extends ContractFactory {
  constructor(...args: ExclusiveNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    _unrevealURI: PromiseOrValue<string>,
    _premiumNFT: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ExclusiveNFT> {
    return super.deploy(
      name,
      symbol,
      _unrevealURI,
      _premiumNFT,
      overrides || {}
    ) as Promise<ExclusiveNFT>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    _unrevealURI: PromiseOrValue<string>,
    _premiumNFT: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      _unrevealURI,
      _premiumNFT,
      overrides || {}
    );
  }
  override attach(address: string): ExclusiveNFT {
    return super.attach(address) as ExclusiveNFT;
  }
  override connect(signer: Signer): ExclusiveNFT__factory {
    return super.connect(signer) as ExclusiveNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExclusiveNFTInterface {
    return new utils.Interface(_abi) as ExclusiveNFTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExclusiveNFT {
    return new Contract(address, _abi, signerOrProvider) as ExclusiveNFT;
  }
}

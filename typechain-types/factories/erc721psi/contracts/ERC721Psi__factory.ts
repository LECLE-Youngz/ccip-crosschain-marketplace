/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC721Psi,
  ERC721PsiInterface,
} from "../../../erc721psi/contracts/ERC721Psi";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "tokensOfOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001b1138038062001b11833981016040819052620000349162000124565b60016200004283826200021d565b5060026200005182826200021d565b5050600060045550620002e9565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008757600080fd5b81516001600160401b0380821115620000a457620000a46200005f565b604051601f8301601f19908116603f01168101908282118183101715620000cf57620000cf6200005f565b81604052838152602092508683858801011115620000ec57600080fd5b600091505b83821015620001105785820183015181830184015290820190620000f1565b600093810190920192909252949350505050565b600080604083850312156200013857600080fd5b82516001600160401b03808211156200015057600080fd5b6200015e8683870162000075565b935060208501519150808211156200017557600080fd5b50620001848582860162000075565b9150509250929050565b600181811c90821680620001a357607f821691505b602082108103620001c457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021857600081815260208120601f850160051c81016020861015620001f35750805b601f850160051c820191505b818110156200021457828155600101620001ff565b5050505b505050565b81516001600160401b038111156200023957620002396200005f565b62000251816200024a84546200018e565b84620001ca565b602080601f831160018114620002895760008415620002705750858301515b600019600386901b1c1916600185901b17855562000214565b600085815260208120601f198616915b82811015620002ba5788860151825594840194600190910190840162000299565b5085821015620002d95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61181880620002f96000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80636352211e11610097578063a22cb46511610066578063a22cb46514610201578063b88d4fde14610214578063c87b56dd14610227578063e985e9c51461023a57600080fd5b80636352211e146101b357806370a08231146101c65780638462151c146101d957806395d89b41146101f957600080fd5b8063095ea7b3116100d3578063095ea7b31461016257806318160ddd1461017757806323b872dd1461018d57806342842e0e146101a057600080fd5b806301ffc9a7146100fa57806306fdde0314610122578063081812fc14610137575b600080fd5b61010d61010836600461129c565b610276565b60405190151581526020015b60405180910390f35b61012a6102c8565b6040516101199190611309565b61014a61014536600461131c565b61035a565b6040516001600160a01b039091168152602001610119565b610175610170366004611351565b6103ea565b005b61017f61051f565b604051908152602001610119565b61017561019b36600461137b565b61052e565b6101756101ae36600461137b565b6105ac565b61014a6101c136600461131c565b6105c7565b61017f6101d43660046113b7565b6105db565b6101ec6101e73660046113b7565b6106a9565b60405161011991906113d2565b61012a610770565b61017561020f366004611416565b61077f565b610175610222366004611468565b610843565b61012a61023536600461131c565b6108c8565b61010d610248366004611544565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b14806102a757506001600160e01b03198216635b5e139f60e01b145b806102c257506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600180546102d790611577565b80601f016020809104026020016040519081016040528092919081815260200182805461030390611577565b80156103505780601f1061032557610100808354040283529160200191610350565b820191906000526020600020905b81548152906001019060200180831161033357829003601f168201915b5050505050905090565b60006103658261099b565b6103ce5760405162461bcd60e51b815260206004820152602f60248201527f4552433732315073693a20617070726f76656420717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084015b60405180910390fd5b506000908152600560205260409020546001600160a01b031690565b60006103f5826105c7565b9050806001600160a01b0316836001600160a01b0316036104645760405162461bcd60e51b8152602060048201526024808201527f4552433732315073693a20617070726f76616c20746f2063757272656e74206f6044820152633bb732b960e11b60648201526084016103c5565b336001600160a01b038216148061049e57506001600160a01b038116600090815260066020908152604080832033845290915290205460ff165b6105105760405162461bcd60e51b815260206004820152603b60248201527f4552433732315073693a20617070726f76652063616c6c6572206973206e6f7460448201527f206f776e6572206e6f7220617070726f76656420666f7220616c6c000000000060648201526084016103c5565b61051a83836109b7565b505050565b6000610529610a25565b905090565b6105383382610a35565b6105a15760405162461bcd60e51b815260206004820152603460248201527f4552433732315073693a207472616e736665722063616c6c6572206973206e6f6044820152731d081bdddb995c881b9bdc88185c1c1c9bdd995960621b60648201526084016103c5565b61051a838383610b22565b61051a83838360405180602001604052806000815250610843565b6000806105d383610d3c565b509392505050565b60006001600160a01b0382166106495760405162461bcd60e51b815260206004820152602d60248201527f4552433732315073693a2062616c616e636520717565727920666f722074686560448201526c207a65726f206164647265737360981b60648201526084016103c5565b6000805b6004548110156106a2576106608161099b565b156106925761066e816105c7565b6001600160a01b0316846001600160a01b0316036106925761068f826115c7565b91505b61069b816115c7565b905061064d565b5092915050565b60606000806106b7846105db565b905060008167ffffffffffffffff8111156106d4576106d4611452565b6040519080825280602002602001820160405280156106fd578160200160208202803683370190505b50905060005b828414610767576107138161099b565b1561075f57856001600160a01b031661072b826105c7565b6001600160a01b03160361075f5780828580600101965081518110610752576107526115e0565b6020026020010181815250505b600101610703565b50949350505050565b6060600280546102d790611577565b336001600160a01b038316036107d75760405162461bcd60e51b815260206004820152601c60248201527f4552433732315073693a20617070726f766520746f2063616c6c65720000000060448201526064016103c5565b3360008181526006602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61084d3383610a35565b6108b65760405162461bcd60e51b815260206004820152603460248201527f4552433732315073693a207472616e736665722063616c6c6572206973206e6f6044820152731d081bdddb995c881b9bdc88185c1c1c9bdd995960621b60648201526084016103c5565b6108c284848484610dd3565b50505050565b60606108d38261099b565b6109325760405162461bcd60e51b815260206004820152602a60248201527f4552433732315073693a2055524920717565727920666f72206e6f6e657869736044820152693a32b73a103a37b5b2b760b11b60648201526084016103c5565b600061094960408051602081019091526000815290565b905060008151116109695760405180602001604052806000815250610994565b8061097384610e56565b6040516020016109849291906115f6565b6040516020818303038152906040525b9392505050565b60006109a660045490565b821080156102c25750600192915050565b600081815260056020526040902080546001600160a01b0319166001600160a01b03841690811790915581906109ec826105c7565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806004546105299190611625565b6000610a408261099b565b610aa45760405162461bcd60e51b815260206004820152602f60248201527f4552433732315073693a206f70657261746f7220717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b60648201526084016103c5565b6000610aaf836105c7565b9050806001600160a01b0316846001600160a01b03161480610aea5750836001600160a01b0316610adf8461035a565b6001600160a01b0316145b80610b1a57506001600160a01b0380821660009081526006602090815260408083209388168352929052205460ff165b949350505050565b600080610b2e83610d3c565b91509150846001600160a01b0316826001600160a01b031614610ba85760405162461bcd60e51b815260206004820152602c60248201527f4552433732315073693a207472616e73666572206f6620746f6b656e2074686160448201526b3a1034b9903737ba1037bbb760a11b60648201526084016103c5565b6001600160a01b038416610c0e5760405162461bcd60e51b815260206004820152602760248201527f4552433732315073693a207472616e7366657220746f20746865207a65726f206044820152666164647265737360c81b60648201526084016103c5565b610c196000846109b7565b6000610c26846001611638565b600881901c600090815260208190526040902054909150600160ff1b60ff83161c16158015610c56575060045481105b15610ca257600081815260036020908152604080832080546001600160a01b0319166001600160a01b038b16179055600884901c83529082905290208054600160ff1b60ff84161c1790555b600084815260036020526040902080546001600160a01b0319166001600160a01b038716179055818414610cf357600884901c60009081526020819052604090208054600160ff1b60ff87161c1790555b83856001600160a01b0316876001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050505050565b600080610d488361099b565b610da95760405162461bcd60e51b815260206004820152602c60248201527f4552433732315073693a206f776e657220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084016103c5565b610db283610f6f565b6000818152600360205260409020546001600160a01b031694909350915050565b610dde848484610b22565b610dec848484600185610f7b565b6108c25760405162461bcd60e51b815260206004820152603560248201527f4552433732315073693a207472616e7366657220746f206e6f6e20455243373260448201527418a932b1b2b4bb32b91034b6b83632b6b2b73a32b960591b60648201526084016103c5565b606081600003610e7d5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610ea75780610e91816115c7565b9150610ea09050600a83611661565b9150610e81565b60008167ffffffffffffffff811115610ec257610ec2611452565b6040519080825280601f01601f191660200182016040528015610eec576020820181803683370190505b5090505b8415610b1a57610f01600183611625565b9150610f0e600a86611675565b610f19906030611638565b60f81b818381518110610f2e57610f2e6115e0565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610f68600a86611661565b9450610ef0565b60006102c28183611100565b60006001600160a01b0385163b156110f357506001835b610f9c8486611638565b8110156110ed57604051630a85bd0160e11b81526001600160a01b0387169063150b7a0290610fd59033908b9086908990600401611689565b6020604051808303816000875af1925050508015611010575060408051601f3d908101601f1916820190925261100d918101906116c5565b60015b6110bb573d80801561103e576040519150601f19603f3d011682016040523d82523d6000602084013e611043565b606091505b5080516000036110b35760405162461bcd60e51b815260206004820152603560248201527f4552433732315073693a207472616e7366657220746f206e6f6e20455243373260448201527418a932b1b2b4bb32b91034b6b83632b6b2b73a32b960591b60648201526084016103c5565b805181602001fd5b8280156110d857506001600160e01b03198116630a85bd0160e11b145b925050806110e5816115c7565b915050610f92565b506110f7565b5060015b95945050505050565b600881901c60008181526020849052604081205490919060ff808516919082181c80156111425761113081611201565b60ff168203600884901b1793506111f8565b600083116111b85760405162461bcd60e51b815260206004820152603460248201527f4269744d6170733a205468652073657420626974206265666f7265207468652060448201527f696e64657820646f65736e27742065786973742e00000000000000000000000060648201526084016103c5565b5060001990910160008181526020869052604090205490919080156111f3576111e081611201565b60ff0360ff16600884901b1793506111f8565b611142565b50505092915050565b600060405180610120016040528061010081526020016116e3610100913960f87e818283848586878898a8b8c8d8e8f929395969799a9b9d9e9faaeb6bedeeff61124a8561126b565b02901c8151811061125d5761125d6115e0565b016020015160f81c92915050565b600080821161127957600080fd5b5060008190031690565b6001600160e01b03198116811461129957600080fd5b50565b6000602082840312156112ae57600080fd5b813561099481611283565b60005b838110156112d45781810151838201526020016112bc565b50506000910152565b600081518084526112f58160208601602086016112b9565b601f01601f19169290920160200192915050565b60208152600061099460208301846112dd565b60006020828403121561132e57600080fd5b5035919050565b80356001600160a01b038116811461134c57600080fd5b919050565b6000806040838503121561136457600080fd5b61136d83611335565b946020939093013593505050565b60008060006060848603121561139057600080fd5b61139984611335565b92506113a760208501611335565b9150604084013590509250925092565b6000602082840312156113c957600080fd5b61099482611335565b6020808252825182820181905260009190848201906040850190845b8181101561140a578351835292840192918401916001016113ee565b50909695505050505050565b6000806040838503121561142957600080fd5b61143283611335565b91506020830135801515811461144757600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561147e57600080fd5b61148785611335565b935061149560208601611335565b925060408501359150606085013567ffffffffffffffff808211156114b957600080fd5b818701915087601f8301126114cd57600080fd5b8135818111156114df576114df611452565b604051601f8201601f19908116603f0116810190838211818310171561150757611507611452565b816040528281528a602084870101111561152057600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561155757600080fd5b61156083611335565b915061156e60208401611335565b90509250929050565b600181811c9082168061158b57607f821691505b6020821081036115ab57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6000600182016115d9576115d96115b1565b5060010190565b634e487b7160e01b600052603260045260246000fd5b600083516116088184602088016112b9565b83519083019061161c8183602088016112b9565b01949350505050565b818103818111156102c2576102c26115b1565b808201808211156102c2576102c26115b1565b634e487b7160e01b600052601260045260246000fd5b6000826116705761167061164b565b500490565b6000826116845761168461164b565b500690565b60006001600160a01b038087168352808616602084015250836040830152608060608301526116bb60808301846112dd565b9695505050505050565b6000602082840312156116d757600080fd5b81516109948161128356fe0001020903110a19042112290b311a3905412245134d2a550c5d32651b6d3a7506264262237d468514804e8d2b95569d0d495ea533a966b11c886eb93bc176c9071727374353637324837e9b47af86c7155181ad4fd18ed32c9096db57d59ee30e2e4a6a5f92a6be3498aae067ddb2eb1d5989b56fd7baf33ca0c2ee77e5caf7ff0810182028303840444c545c646c7425617c847f8c949c48a4a8b087b8c0c816365272829aaec650acd0d28fdad4e22d6991bd97dfdcea58b4d6f29fede4f6fe0f1f2f3f4b5b6b607b8b93a3a7b7bf357199c5abcfd9e168bcdee9b3f1ecf5fd1e3e5a7a8aa2b670c4ced8bbe8f0f4fc3d79a1c3cde7effb78cce6facbf9f8a26469706673582212207b18c880a0b2788e04ddd449cd0f5da3140e7bc39ffe4bbada9f1d71ee8a177464736f6c63430008130033";

type ERC721PsiConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721PsiConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721Psi__factory extends ContractFactory {
  constructor(...args: ERC721PsiConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721Psi> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC721Psi>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): ERC721Psi {
    return super.attach(address) as ERC721Psi;
  }
  override connect(signer: Signer): ERC721Psi__factory {
    return super.connect(signer) as ERC721Psi__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721PsiInterface {
    return new utils.Interface(_abi) as ERC721PsiInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721Psi {
    return new Contract(address, _abi, signerOrProvider) as ERC721Psi;
  }
}
